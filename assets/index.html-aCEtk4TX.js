import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as r,c,b as i,d as e,e as n,a,f as s}from"./app-DS63VvTj.js";const p="/assets/数据卷介绍-Du0TOtFq.png",d={},m=e("p",null,"此处介绍的是数据券挂载的相关知识。",-1),h=s('<h2 id="数据卷" tabindex="-1"><a class="header-anchor" href="#数据卷"><span>数据卷</span></a></h2><div class="hint-container tip"><p class="hint-container-title">什么是数据卷？</p><p><i>数据卷（Volume）</i>是一个虚拟的目录，是<i>容器内部的目录</i>与<i>宿主机目录</i>之间映射的桥梁。</p><p>容器内部的资源路径可查看 Docker Hub 中对应容器的介绍文档。</p></div><p><img src="'+p+'" alt="数据卷介绍" loading="lazy"></p><h3 id="相关命令" tabindex="-1"><a class="header-anchor" href="#相关命令"><span>相关命令</span></a></h3><blockquote><p>可通过命令查看相关帮助文档：<code>docker volume --help</code>。</p></blockquote>',5),u=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"命令"),e("th",{style:{"text-align":"left"}},"说明"),e("th",{style:{"text-align":"left"}},"文档地址")])],-1),_=e("td",{style:{"text-align":"left"}},"docker volume create",-1),g=e("td",{style:{"text-align":"left"}},"创建数据卷。",-1),k={style:{"text-align":"left"}},v={href:"https://docs.docker.com/engine/reference/commandline/volume_create/",target:"_blank",rel:"noopener noreferrer"},f=e("td",{style:{"text-align":"left"}},"docker volume ls",-1),x=e("td",{style:{"text-align":"left"}},"查看所有数据卷。",-1),b={style:{"text-align":"left"}},y={href:"https://docs.docker.com/engine/reference/commandline/volume_ls/",target:"_blank",rel:"noopener noreferrer"},q=e("td",{style:{"text-align":"left"}},"docker volume rm",-1),D=e("td",{style:{"text-align":"left"}},"删除指定数据卷。",-1),T={style:{"text-align":"left"}},N={href:"https://docs.docker.com/engine/reference/commandline/volume_prune/",target:"_blank",rel:"noopener noreferrer"},V=e("td",{style:{"text-align":"left"}},"docker volume inspect",-1),C=e("td",{style:{"text-align":"left"}},"查看某个数据卷的详情。",-1),E={style:{"text-align":"left"}},w={href:"https://docs.docker.com/engine/reference/commandline/volume_inspect/",target:"_blank",rel:"noopener noreferrer"},z=e("td",{style:{"text-align":"left"}},"docker volume prune",-1),Z=e("td",{style:{"text-align":"left"}},"清除数据卷。",-1),j={style:{"text-align":"left"}},B={href:"https://docs.docker.com/engine/reference/commandline/volume_prune/",target:"_blank",rel:"noopener noreferrer"},H=s(`<p>在执行 <code>docker run</code> 命令时，使用 <code>-v 数据卷名称:容器内部目录</code> 可以完成数据卷的挂载。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 示例代码：数据卷名称为 html 与容器内部目录 html:/usr/share/nginx/html 进行了挂载</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">-v</span> html:/usr/share/nginx/html nginx:1.23.3
<span class="token comment"># 查看数据卷挂载的详情（可查看数据卷挂载在宿主机的那个目录下）</span>
<span class="token function">docker</span> volume inspect nginx
</code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意！</p><p>当创建容器时，如果挂载了数据卷，并且数据卷不存在时，则会自动的创建数据卷（如以上的 <code>html</code> 数据卷就会自动创建）。</p></div><h3 id="挂载本地" tabindex="-1"><a class="header-anchor" href="#挂载本地"><span>挂载本地</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>由于自动创建的数据卷目录结构较深，如果我们去操作数据卷目录会不太方便。</p><p>所以可以直接将容器内部的目录或文件与宿主机指定的目录或文件进行挂载。</p></div><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 挂载本地目录（创建容器时）</span>
<span class="token parameter variable">-v</span> 本地目录:容器内目录
<span class="token comment"># 挂载本地文件（创建容器时）</span>
<span class="token parameter variable">-v</span> 本地文件:容器内文件
<span class="token comment"># 示例本地目录挂载：</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">-v</span> /opt/nginx/html:/usr/share/nginx/html nginx:1.23.3
</code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意！</p><p>本地目录或文件必须以 <code>/</code> 或 <code>./</code> 开头，如果直接以名字开头，会被识别为是数据卷名而非本地目录/文件名。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 例如：</span>
<span class="token parameter variable">-v</span> mysql:/var/lib/mysql <span class="token comment"># 会被识别为一个数据卷叫 mysql 运行时会自动创建这个数据卷</span>
<span class="token parameter variable">-v</span> /mysql:/var/lib/mysql <span class="token comment"># 会被识别为根目录下的 mysql 目录，运行时如果不存在会创建该目录</span>
</code></pre></div></div>`,7);function S(A,I){const t=l("ExternalLinkIcon");return r(),c("div",null,[m,i(" more "),h,e("table",null,[u,e("tbody",null,[e("tr",null,[_,g,e("td",k,[e("a",v,[n("docker volume create"),a(t)])])]),e("tr",null,[f,x,e("td",b,[e("a",y,[n("docs.docker.com"),a(t)])])]),e("tr",null,[q,D,e("td",T,[e("a",N,[n("docs.docker.com"),a(t)])])]),e("tr",null,[V,C,e("td",E,[e("a",w,[n("docs.docker.com"),a(t)])])]),e("tr",null,[z,Z,e("td",j,[e("a",B,[n("docker volume prune"),a(t)])])])])]),H])}const O=o(d,[["render",S],["__file","index.html.vue"]]),P=JSON.parse('{"path":"/notes/docker/volumes/","title":"数据卷挂载","lang":"zh-CN","frontmatter":{"title":"数据卷挂载","icon":"install","category":"容器技术","tag":["Docker"],"timeline":true,"star":true,"description":"此处介绍的是数据券挂载的相关知识。 数据卷 什么是数据卷？ 数据卷（Volume）是一个虚拟的目录，是容器内部的目录与宿主机目录之间映射的桥梁。 容器内部的资源路径可查看 Docker Hub 中对应容器的介绍文档。 数据卷介绍 相关命令 可通过命令查看相关帮助文档：docker volume --help。 在执行 docker run 命令时，使用...","head":[["meta",{"property":"og:url","content":"https://SuperChenWenjing.github.io/notes/docker/volumes/"}],["meta",{"property":"og:site_name","content":"陈文景"}],["meta",{"property":"og:title","content":"数据卷挂载"}],["meta",{"property":"og:description","content":"此处介绍的是数据券挂载的相关知识。 数据卷 什么是数据卷？ 数据卷（Volume）是一个虚拟的目录，是容器内部的目录与宿主机目录之间映射的桥梁。 容器内部的资源路径可查看 Docker Hub 中对应容器的介绍文档。 数据卷介绍 相关命令 可通过命令查看相关帮助文档：docker volume --help。 在执行 docker run 命令时，使用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-08T16:03:07.000Z"}],["meta",{"property":"article:author","content":"陈文景"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:modified_time","content":"2024-03-08T16:03:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据卷挂载\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-08T16:03:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"陈文景\\",\\"email\\":\\"2646530197@qq.com\\",\\"url\\":\\"https://superchenwenjing.github.io\\"}]}"]],"date":"2024-03-08T16:03:07.000Z"},"headers":[{"level":2,"title":"数据卷","slug":"数据卷","link":"#数据卷","children":[{"level":3,"title":"相关命令","slug":"相关命令","link":"#相关命令","children":[]},{"level":3,"title":"挂载本地","slug":"挂载本地","link":"#挂载本地","children":[]}]}],"git":{"createdTime":1709913787000,"updatedTime":1709913787000,"contributors":[{"name":"陈文景","email":"2646530197@qq.com","commits":1}]},"readingTime":{"minutes":2.06,"words":617},"filePathRelative":"notes/docker/volumes/README.md","localizedDate":"2024年3月8日","excerpt":"<p>此处介绍的是数据券挂载的相关知识。</p>\\n","autoDesc":true}');export{O as comp,P as data};
