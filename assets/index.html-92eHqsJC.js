import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as l,c as t,b as e,d as s,f as i}from"./app-Dz-3oafC.js";const n="/assets/Linu系统运行级别-Ddhb7nDA.png",d="/assets/VIM的删除和复制操作-DKoLI6oj.png",p="/assets/VIM光标移动操作-1PxpDNuf.png",c="/assets/VIM的编辑模式-BA60AXnC.png",o="/assets/VIM的命令模式-Cv3GV7rP.png",r="/assets/三个模式之间的关系-BgytO5_y.png",h="/assets/文件类型和权限的表示-TcmRlTgH.png",u="/assets/文件权限解读-DsgMNCPu.png",g="/assets/文件类型和权限的表示-注释版-3KyjUxTZ.png",b="/assets/Windows分区-DRmtMKC_.png",v="/assets/挂载前准备-BjlkXA1y.png",m="/assets/设置开机自动挂载-C7vbGwI0.png",k="/assets/ps-aux-SeMGnLQO.png",_="/assets/ps-ef-C-t36FZJ.png",x={},f=s("p",null,"记录在开发过程中使用比较频繁的一些 Linux 命令（持续更新中...）。",-1),y=i(`<h2 id="_1-帮助类命令" tabindex="-1"><a class="header-anchor" href="#_1-帮助类命令"><span>1.帮助类命令</span></a></h2><h3 id="_1-1-man" tabindex="-1"><a class="header-anchor" href="#_1-1-man"><span>1.1 <code>man</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>man [命令或配置文件]</code>。</li></ul></li><li><p>功能描述：</p><ul><li>获取相关命令或配置文件的帮助信息。</li></ul></li><li><p>显示说明：</p><table><thead><tr><th><strong>信息</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>NAME</td><td>命令的名称和单行描述</td></tr><tr><td>SYNOPSIS</td><td>怎样使用命令</td></tr><tr><td>DESCRIPTION</td><td>命令功能的深入讨论</td></tr><tr><td>EXAMPLES</td><td>怎样使用命令的例子</td></tr><tr><td>SEE ALSO</td><td>相关主题（通常是手册页）</td></tr></tbody></table></li><li><p>示例：</p><ul><li><p>查看<code>ls</code>命令的帮助信息。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">man</span> <span class="token function">ls</span>
</code></pre></div></li></ul></li></ul><h3 id="_1-2-help" tabindex="-1"><a class="header-anchor" href="#_1-2-help"><span>1.2 <code>help</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>help 命令</code>。</li></ul></li><li><p>功能描述：</p><ul><li>获得 Shell 内置命令的帮助信息。</li></ul></li><li><p>示例：</p><ul><li><p>查看<code>cd</code>命令的帮助信息。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">help</span> <span class="token builtin class-name">cd</span>
</code></pre></div></li></ul></li></ul><h2 id="_2-开关机类命令" tabindex="-1"><a class="header-anchor" href="#_2-开关机类命令"><span>2.开关机类命令</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>一般 Linux 不会经常进行关机的操作。</p><p>正确的关机流程为：<code>sync &gt; shutdown &gt; reboot &gt; poweroff</code>。</p></div><ul><li><p>语法：</p><ul><li><p><code>sync</code>：将内存中的数据同步到硬盘中。</p></li><li><p><code>shutdown\\[选项] now/时间</code>。</p></li><li><p><code>reboot</code>：重启系统（等同于<code>shutdown -r now</code>）。</p></li><li><p><code>poweroff</code>：关闭系统（等同于<code>shutdown -h now</code>）。</p></li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-h</td><td>-h=halt 表示关机。</td></tr><tr><td>-r</td><td>-r=reboot 表示重启。</td></tr></tbody></table></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>now</td><td>表示立刻关机。</td></tr><tr><td>时间</td><td>等待多久之后关机（分钟）</td></tr></tbody></table></li><li><p><strong>注意事项</strong>：</p><ul><li>Linux 系统中为了提高磁盘读写效率，对磁盘采取了&quot;预读迟写&quot;操作方式，当用户保存文件时，Linux 核心并不一定对保存的数据立刻写入物理磁盘，而是将数据保存在缓冲区中，等缓冲区写满时再写入磁盘。</li><li>这种方式可以极大的提高磁盘写入数据的效率，同时也带来了安全隐患，如果数据还未写入磁盘时，系统掉电或者出现其他严重的问题造成宕机，可能会造成数据的丢失，使用<code>sync</code>指令可以立即将缓冲区的数据写入磁盘。</li></ul></li></ul><h3 id="_2-1-临时开关服务命令" tabindex="-1"><a class="header-anchor" href="#_2-1-临时开关服务命令"><span>2.1 临时开关服务命令</span></a></h3><ul><li><p>语法：</p><ul><li><p>Centos6.x 版本：</p><ul><li><p>service 服务名 start 开启服务。</p></li><li><p>service 服务名 stop 关闭服务。</p></li><li><p>service 服务名 restart 重启服务。</p></li><li><p>service 服务名 status 查看服务状态。</p></li></ul></li><li><p>Centos7.x 版本：</p><ul><li><p>systemctl start 服务名 开启服务。</p></li><li><p>systemctl stop 服务名 关闭服务。</p></li><li><p>systemctl restart 服务名 重启服务。</p></li><li><p>systemctl status 服务名 查看服务。</p></li><li><p>systemctl --type service 查看正在运行的服务。</p></li></ul></li></ul></li><li><p>示例：</p><ul><li><p>查看网络服务状态：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl status network.service
</code></pre></div></li><li><p>关闭服务：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl stop network.service
</code></pre></div></li><li><p>启动服务：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl start network.service
</code></pre></div></li><li><p>重启服务：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl restart network.service
</code></pre></div></li><li><p>查看所有服务：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl <span class="token parameter variable">--type</span> <span class="token function">service</span>
</code></pre></div></li></ul></li><li><p>补充说明：<code>.service</code>后缀可以省略不写。</p></li></ul><h3 id="_2-2-永久开关服务命令" tabindex="-1"><a class="header-anchor" href="#_2-2-永久开关服务命令"><span>2.2 永久开关服务命令</span></a></h3><ul><li><p>语法：</p><ul><li><p>Centos6.x 版本：</p><ul><li><p>chkconfig 查看所有服务自启配置。</p></li><li><p>chkconfig 服务名 off 关闭服务自启。</p></li><li><p>chkconfig 服务名 on 开启服务自启。</p></li><li><p>chkconfig 服务名 --list 查看服务开机启动状态。</p></li></ul></li><li><p>Centos7.x 版本：</p><ul><li><p>systemctl enable 服务名 打开自启。</p></li><li><p>systemctl disable 服务名 关闭自启。</p></li><li><p>systemctl is-enabled 服务名 查看服务是否自启。</p></li><li><p>systemctl list-unit-files 查看所有服务自启配置。</p></li></ul></li></ul></li><li><p>示例：</p><ul><li><p>关闭防火墙自动启动：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl status firewalld <span class="token comment"># 查看防火墙状态</span>
systemctl disable firewalld <span class="token comment"># 关闭防火墙自启</span>
</code></pre></div></li><li><p>开启防火墙自启：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> firewalld
</code></pre></div></li><li><p>查看防火墙是否自启：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl is-enabled firewalld
</code></pre></div></li><li><p>关闭网络管理器服务：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl status NetworkManager.service <span class="token comment"># 查看服务</span>
systemctl stop NetworkManager <span class="token comment"># 停止服务</span>
systemctl is-enabled NetworkManager <span class="token comment"># 查看自启动</span>
systemctl disable NetworkManager <span class="token comment"># 关闭自启动</span>
</code></pre></div></li></ul></li></ul><h3 id="_2-3-linux系统运行级别" tabindex="-1"><a class="header-anchor" href="#_2-3-linux系统运行级别"><span>2.3 Linux系统运行级别</span></a></h3><p>Linux 系统有 7 种运行级别（runlevel）：常用的是级别有 3 和 5（CentOS7.x 中只有两个级别：3 和 5）。</p><ul><li>运行级别 0：系统停机状态，系统默认运行级别不能设为 0，否则不能正常启动。</li><li>运行级别 1：单用户工作状态，root 权限，用于系统维护，禁止远程登陆。</li><li>运行级别 2：多用户状态（没有NFS），不支持网络。</li><li>运行级别 3：完全的多用户状态（有NFS），登陆后进入控制台命令行模式。</li><li>运行级别 4：系统未使用（保留级别）。</li><li>运行级别 5：X11 控制台，登陆后进入图形 GUI 模式。</li><li>运行级别 6：系统正常关闭并重启，默认运行级别不能设为 6，否则不能正常启动。</li></ul><p><img src="`+n+`" alt="Linu系统运行级别" loading="lazy"></p><h2 id="_3-文件目录类命令" tabindex="-1"><a class="header-anchor" href="#_3-文件目录类命令"><span>3.文件目录类命令</span></a></h2><h3 id="_3-1-pwd" tabindex="-1"><a class="header-anchor" href="#_3-1-pwd"><span>3.1 <code>pwd</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>pwd</code>。</li></ul></li><li><p>功能描述：</p><ul><li>打印当前工作目录的绝对路径（）。</li></ul></li><li><p>示例：</p><ul><li><p>显示当前工作目录的绝对路径：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">pwd</span>
</code></pre></div></li></ul></li></ul><h3 id="_3-2-ls" tabindex="-1"><a class="header-anchor" href="#_3-2-ls"><span>3.2 <code>ls</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>ls [选项] [目录或是文件]</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-a</td><td>列出全部的文件，连同隐藏的（开头为<code>.</code>的文件）一起列出来。</td></tr><tr><td>-l</td><td>长数据串列出，包含文件的属性与权限等信息。</td></tr></tbody></table></li><li><p>显示说明：</p><ul><li><p>每行列出的信息依次是：</p><ul><li><p>文件类型与权限；</p></li><li><p>链接数；</p></li><li><p>文件属主；</p></li><li><p>文件属组；</p></li><li><p>文件大小（byte）；</p></li><li><p>建立或最近修改的时间；</p></li><li><p>名字。</p></li></ul></li></ul></li><li><p>功能描述：</p><ul><li>列出目录里的内容（list）。</li></ul></li><li><p>示例：</p><ul><li><p>查看当前目录的所有内容信息：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-al</span>
</code></pre></div></li></ul></li></ul><h3 id="_3-3-cd" tabindex="-1"><a class="header-anchor" href="#_3-3-cd"><span>3.3 <code>cd</code></span></a></h3><ul><li><p>语法：</p><ul><li><p><code>cd [参数]</code>。</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>cd 绝对路径</td><td>切换路径</td></tr><tr><td>cd 相对路径</td><td>切换路径</td></tr><tr><td>cd ~ 或者 cd</td><td>回到自己的家目录</td></tr><tr><td>cd -</td><td>回到上一次所在目录</td></tr><tr><td>cd ..</td><td>回到当前目录的上一级目录</td></tr><tr><td>cd -P</td><td>跳转到实际物理路径（而非快捷方式路径）</td></tr><tr><td>cd /</td><td>回到系统根目录</td></tr></tbody></table></li></ul></li><li><p>功能描述：</p><ul><li>切换路径（Change Directory）。</li></ul></li><li><p>示例：</p><ul><li><p>使用绝对路径切换到 root 目录：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /root
</code></pre></div></li></ul></li></ul><h3 id="_3-4-mkdir" tabindex="-1"><a class="header-anchor" href="#_3-4-mkdir"><span>3.4 <code>mkdir</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>mkdir [选项] 要创建的目录名称</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-p</td><td>创建多层目录</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>建立目录（Make directory）。</li></ul></li><li><p>示例：</p><ul><li><p>创建一个目录：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> dev
</code></pre></div></li><li><p>创建一个多级目录：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> dev/test/project
</code></pre></div></li></ul></li></ul><h3 id="_3-5-rmdir" tabindex="-1"><a class="header-anchor" href="#_3-5-rmdir"><span>3.5 <code>rmdir</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>rmdir 要删除的空目录</code>。</li></ul></li><li><p>功能描述：</p><ul><li>删除一个空的目录（Remove directory）。</li></ul></li><li><p>示例：</p><ul><li><p>删除一个空的文件夹：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rmdir</span> dev/test/project
</code></pre></div></li></ul></li></ul><h3 id="_3-6-touch" tabindex="-1"><a class="header-anchor" href="#_3-6-touch"><span>3.6 <code>touch</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>touch 文件名称</code>。</li></ul></li><li><p>功能描述：</p><ul><li>创建空文件。</li></ul></li><li><p>示例：</p><ul><li><p>创建一个空的文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">touch</span> dev/test/project/dev.txt
</code></pre></div></li></ul></li></ul><h3 id="_3-7-cp" tabindex="-1"><a class="header-anchor" href="#_3-7-cp"><span>3.7 <code>cp</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>cp [选项] source target</code> - 命令解释：复制 source 文件到 target。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-r</td><td>递归复制整个文件夹</td></tr></tbody></table></li><li><p>参数：</p><blockquote><p>复制 source 文件到 target。</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>source</td><td>源文件。</td></tr><tr><td>target</td><td>目标文件。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>复制文件或目录。</li></ul></li><li><p>示例：</p><ul><li><p>复制文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> dev/test/project/dev.txt /opt/dev
</code></pre></div></li><li><p>递归复制整个文件夹：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-r</span> dev/test/project/ ./
</code></pre></div></li></ul></li><li><p>注意事项：</p><ul><li>强制覆盖不提示的方法：<code>\\cp [选项] source target</code>。</li></ul></li></ul><h3 id="_3-8-rm" tabindex="-1"><a class="header-anchor" href="#_3-8-rm"><span>3.8 <code>rm</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>rm [选项] 文件/目录名称</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-r</td><td>递归删除目录所有内容。</td></tr><tr><td>-f</td><td>强制删除（不提示用户进行确认）。</td></tr><tr><td>-v</td><td>显示指令的详细执行过程。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>移除文件或者目录。</li></ul></li><li><p>示例：</p><ul><li><p>删除目录中的内容：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rm</span> dev/test/project/dev.txt
</code></pre></div></li><li><p>递归删除目录中所有内容：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span>  dev/
</code></pre></div></li></ul></li></ul><h3 id="_3-9-mv" tabindex="-1"><a class="header-anchor" href="#_3-9-mv"><span>3.9 <code>mv</code></span></a></h3><ul><li><p>语法：</p><ul><li><p>重命名：<code>mv 旧文件名称 新文件名称</code>。</p></li><li><p>移动文件：<code>mv /目录/文件名称 /目标目录</code>。</p></li></ul></li><li><p>功能描述：</p><ul><li>移动文件与目录或重命名。</li></ul></li><li><p>示例：</p><ul><li><p>重命名：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mv</span> dev/test/project/dev.txt /root/new-dev.txt
</code></pre></div></li><li><p>移动文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mv</span> /root/new-dev.txt ./
</code></pre></div></li></ul></li></ul><h3 id="_3-10-cat" tabindex="-1"><a class="header-anchor" href="#_3-10-cat"><span>3.10 <code>cat</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>cat [选项] 文件名称</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能描述</th></tr></thead><tbody><tr><td>-n</td><td>显示所有行的行号（包括空行）。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>查看文件内容（一般用于查看比较小的文件：一屏幕能显示全的）。</li></ul></li><li><p>示例：</p><ul><li><p>查看文件内容并显示行号：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token parameter variable">-n</span> dev.txt 
</code></pre></div></li></ul></li></ul><h3 id="_3-11-more" tabindex="-1"><a class="header-anchor" href="#_3-11-more"><span>3.11 <code>more</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>more 要查看的文件名称</code>。</li></ul></li><li><p>操作说明：</p><blockquote><p>more 指令是一个基于 VI 编辑器的文本过滤器。</p><p>它以全屏幕的方式按页显示文本文件的内容。</p><p>more 指令中内置了若干快捷键（详见操作说明）。</p></blockquote><table><thead><tr><th>操作</th><th>功能说明</th></tr></thead><tbody><tr><td>空白键（space）</td><td>代表向下翻一页。</td></tr><tr><td>Enter</td><td>代表向下翻『一行』。</td></tr><tr><td>q</td><td>代表立刻离开 more ，不再显示该文件内容。</td></tr><tr><td>Ctrl+F</td><td>向下滚动一屏。</td></tr><tr><td>Ctrl+B</td><td>返回上一屏。</td></tr><tr><td>=</td><td>输出当前行的行号。</td></tr><tr><td>:f</td><td>输出文件名和当前行的行号。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>文件分屏查看器。</li></ul></li><li><p>示例：</p><ul><li><p>采用 more 查看文件。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">more</span> redis.conf
</code></pre></div></li></ul></li></ul><h3 id="_3-12-less" tabindex="-1"><a class="header-anchor" href="#_3-12-less"><span>3.12 <code>less</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>less 要查看的文件名称</code>。</li></ul></li><li><p>操作说明：</p><div class="hint-container note"><p class="hint-container-title">补充说明</p><p>less 指令用来分屏查看文件的内容。</p><p>它的功能与 more 指令类似，但是比 more 指令更加强大，支持各种显示终端。</p><p>less 指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。</p></div><table><thead><tr><th>操作</th><th>功能说明</th></tr></thead><tbody><tr><td>空白键</td><td>向下翻动一页。</td></tr><tr><td>[pagedown]</td><td>向下翻动一页。</td></tr><tr><td>[pageup]</td><td>向上翻动一页。</td></tr><tr><td>/字串</td><td>向下搜寻『字串』的功能：n：向下查找。N：向上查找。</td></tr><tr><td>?字串</td><td>向上搜寻『字串』的功能：n：向上查找。N：向下查找。</td></tr><tr><td>q</td><td>离开 less 这个程序。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>分屏显示文件内容。</li></ul></li><li><p>示例：</p><ul><li><p>采用 less 查看文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">less</span> redis.conf
</code></pre></div></li></ul></li></ul><h3 id="_3-13-head" tabindex="-1"><a class="header-anchor" href="#_3-13-head"><span>3.13 <code>head</code></span></a></h3><ul><li><p>语法：</p><ul><li><p><code>head 文件名称</code> - 命令解释：默认查看文件头 10 行内容。</p></li><li><p><code>head -n 5 文件名称</code>或<code>head -5 文件名称</code> - 命令解释：查看文件头 5 行内容。</p></li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能说明</th></tr></thead><tbody><tr><td>-n &lt;显示的行数&gt;</td><td>指定显示头部内容的行数。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>显示文件的开头部分内容（默认情况下 head 指令显示文件的前 10 行内容）。</li></ul></li><li><p>示例：</p><ul><li><p>查看文件的头 2 行内容：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">2</span> redis.conf <span class="token comment"># 或 head -2 redis.conf</span>
</code></pre></div></li></ul></li></ul><h3 id="_3-14-tail" tabindex="-1"><a class="header-anchor" href="#_3-14-tail"><span>3.14 <code>tail</code></span></a></h3><ul><li><p>语法：</p><ul><li><p><code>tail 文件名称</code> - 命令解释：默认查看文件后 10 行内容。</p></li><li><p><code>tail -n 5 文件名称</code> - 命令解释：查看文件后 5 行内容。</p></li><li><p><code>tail -f 文件名称</code> - 命令解释：实时追踪该文档的所有更新。</p></li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能说明</th></tr></thead><tbody><tr><td>-n &lt;显示的行数&gt;</td><td>指定显示尾部内容的行数。</td></tr><tr><td>-f</td><td>显示文件最新追加的内容（监视文件变化）。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>用于输出文件中尾部的内容（默认情况下 tail 指令显示文件的后 10 行内容）。</li></ul></li><li><p>示例：</p><ul><li><p>查看文件头 1 行的内容：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> redis.conf <span class="token comment"># 或 tail -1 redis.conf </span>
</code></pre></div></li><li><p>实时追踪该档的所有更新：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-f</span> redis.log
</code></pre></div></li></ul></li></ul><h3 id="_3-15-echo" tabindex="-1"><a class="header-anchor" href="#_3-15-echo"><span>3.15 <code>echo</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>echo [选项] [输出的内容]</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能描述</th></tr></thead><tbody><tr><td>-e</td><td>支持反斜线控制的字符转换。</td></tr></tbody></table><table><thead><tr><th>控制字符</th><th>作用</th></tr></thead><tbody><tr><td>\\\\</td><td>输出\\本身。</td></tr><tr><td>\\n</td><td>换行符。</td></tr><tr><td>\\t</td><td>制表符（也就是Tab键）。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>输出内容到控制台（类似：System.out.println()）。</li></ul></li><li><p>示例：</p><ul><li><p>打印文字信息：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;hello<span class="token entity" title="\\t">\\t</span>world&quot;</span> <span class="token comment"># hello\\tworld echo -e &quot;hello\\tworld&quot; # hello   world</span>
</code></pre></div></li><li><p>打印环境变量：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span>
</code></pre></div></li></ul></li></ul><h3 id="_3-16" tabindex="-1"><a class="header-anchor" href="#_3-16"><span>3.16 <code>&gt;</code> <code>&gt;&gt;</code></span></a></h3><ul><li><p>语法：</p><ul><li><p><code>ll &gt; 文件名称</code> - 命令解释：将 ll 命令查询出的列表内容写入文件 a.txt 中（覆盖写）。</p></li><li><p><code>ll &gt;&gt; 文件</code> - 命令解释：将 ll 命令查询出的列表内容追加到文件 a.txt 的末尾。</p></li><li><p><code>cat 文件名称1 &gt; 文件名称2</code> - 命令解释：将文件名称 1 中的内容覆盖到文件名称 2 中。</p></li><li><p><code>echo “内容” &gt;&gt; 文件名称</code> - 命令解释：将“内容”两字追加到文件 a.txt 的末尾。</p></li></ul></li><li><p>功能描述：</p><ul><li>一个 &gt; 是覆盖。</li><li>两个 &gt;&gt; 是追加。</li></ul></li><li><p>示例：</p><ul><li><p>将 ls 查询出的信息写入到文件中：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token operator">&gt;</span> a.txt
</code></pre></div></li><li><p>将 ls 查询出的信息追加到文件中：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token operator">&gt;&gt;</span> a.txt
</code></pre></div></li><li><p>采用 echo 将 hello 单词追加到文件中：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;hello&quot;</span> <span class="token operator">&gt;&gt;</span> a.txt
</code></pre></div></li></ul></li></ul><h3 id="_3-17-ln" tabindex="-1"><a class="header-anchor" href="#_3-17-ln"><span>3.17 <code>ln</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>ln [-s] [原文件名称或目录名称] [链接名称]</code> - 命令解释：给原文件创建一个链接。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能说明</th></tr></thead><tbody><tr><td>-s</td><td>创建的链接为软连接。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li><p>创建链接和软链接。</p><div class="hint-container note"><p class="hint-container-title">补充说明</p><p>链接表示的是目标资源另外的访问方式（表示一种路径）。</p><p>软链接也称为符号链接，类似于 Windows 系统中的快捷方式，有自己的数据块，主要存放了链接其他文件的路径。</p></div></li></ul></li><li><p>经验技巧：</p><ul><li><p>删除软链接：<code>rm -rf 软链接名名称</code>而不是<code>rm -rf 软链接名/</code>。</p></li><li><p>查询：通过 ll 命令就可以查看，列表属性第 1 位是 l 的则表示是软连接，名称尾部会有位置指向。</p></li></ul></li><li><p>示例：</p><ul><li><p>创建软连接：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mv</span> houge.txt xiyou/qujing/
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /root/xiyou/qujing/houge.txt /root/houzi
ll
<span class="token comment"># lrwxrwxrwx. 1 root  root   20 6月 17 12:56 houzi -&gt; xiyou/qujing/houge.txt</span>
</code></pre></div></li><li><p>删除软连接：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> houzi
</code></pre></div></li><li><p>进入软连接实际物理路径：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> xiyou/qujing/ ./qujing <span class="token builtin class-name">cd</span> <span class="token parameter variable">-P</span> qujing/
</code></pre></div></li></ul></li></ul><h3 id="_3-18-history" tabindex="-1"><a class="header-anchor" href="#_3-18-history"><span>3.18 <code>history</code></span></a></h3><ul><li><p>语法：</p><ul><li><code>history</code>。</li></ul></li><li><p>功能描述：</p><ul><li>查看已经执行过历史命令。</li></ul></li><li><p>示例：</p><ul><li><p>查看已经执行过的历史命令：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">history</span>
</code></pre></div></li><li><p><code>/root/.bash\\_history</code>文件中也是历史命令：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">less</span> /root/.bash_history
</code></pre></div></li></ul></li></ul><h2 id="_4-vi和vim编辑器" tabindex="-1"><a class="header-anchor" href="#_4-vi和vim编辑器"><span>4.VI和VIM编辑器</span></a></h2><h3 id="_4-1-vi和vim简介" tabindex="-1"><a class="header-anchor" href="#_4-1-vi和vim简介"><span>4.1 <code>VI</code>和<code>VIM</code>简介</span></a></h3><p>VI 是 Unix 和类 Unix 操作系统中出现的通用的文本编辑器。</p><p>VIM 是从 VI 发展出来的一个性能更强大的文本编辑器，可以主动的以字体颜色辨别语法的正确性，方便程序设计。</p><p>VIM 和 VI 编辑器完全兼容。</p><p>使用方式：<code>vi xxx文件</code>或者<code>vim xxx文件</code>，简单来说，就是用来编辑文件的一个工具，类似于我们再 Windows 上的一些文本编辑工具，只不过，这里是命令行形式的，不是图形用户界面形式的。</p><h3 id="_4-2-vim的一般模式" tabindex="-1"><a class="header-anchor" href="#_4-2-vim的一般模式"><span>4.2 <code>VIM</code>的一般模式</span></a></h3><div class="hint-container note"><p class="hint-container-title">默认模式</p><ul><li>在这个模式中，可以使用『上下左右』按键来移动光标。</li><li>可以使用『删除字符』或『删除整行』来处理档案内容。</li><li>也可以使用『复制、贴上』来处理文件数据。</li></ul></div><h4 id="_4-2-1-删除和复制操作" tabindex="-1"><a class="header-anchor" href="#_4-2-1-删除和复制操作"><span>4.2.1 删除和复制操作</span></a></h4><p><img src="`+d+'" alt="VIM的删除和复制操作" loading="lazy"></p><h4 id="_4-2-2-光标的移动操作" tabindex="-1"><a class="header-anchor" href="#_4-2-2-光标的移动操作"><span>4.2.2 光标的移动操作</span></a></h4><p><img src="'+p+'" alt="VIM光标移动操作" loading="lazy"></p><h3 id="_4-3-vim的编辑模式" tabindex="-1"><a class="header-anchor" href="#_4-3-vim的编辑模式"><span>4.3 <code>VIM</code>的编辑模式</span></a></h3><p>在一般模式中可以进行删除、复制、贴上等等的动作，但是却无法编辑文件内容！需要等到你按下『i、I、o、O、a、A、r、R』等任何一个字母之后才会进入编辑模式（如下图所示）。</p><p><strong>注意</strong>：通常在 Linux 中，按下这些按键时，在画面的左下方会出现『INSERT 或 REPLACE 』的字样，此时才可以进行编辑。</p><p>而如果需要回到一般模式时，则必须要按下『Esc』这个按键即可退出编辑模式。</p><p><img src="'+c+'" alt="VIM的编辑模式" loading="lazy"></p><h3 id="_4-4-vim的命令模式" tabindex="-1"><a class="header-anchor" href="#_4-4-vim的命令模式"><span>4.4 <code>VIM</code>的命令模式</span></a></h3><p>可以进行存盘、退出、显示行号、搜索、批量替换等操作（如下图所示）。</p><p>要在一般模式下输入<code>/</code>或<code>:</code>或者<code>?</code>可进入命令模式，当命令执行前按『Esc』或者命令执行完毕，自动回到一般模式。</p><p><img src="'+o+'" alt="VIM的命令模式" loading="lazy"></p><h3 id="_4-5-三个模式之间的关系" tabindex="-1"><a class="header-anchor" href="#_4-5-三个模式之间的关系"><span>4.5 三个模式之间的关系</span></a></h3><p><img src="'+r+`" alt="三个模式之间的关系" loading="lazy"></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果非正常退出，如使用<code>ctrl+z</code>退出，再次编辑会提示交换文件 <code>*.swp</code>已存在，并给出相应的处理方式选项，如果不删除该交换文件，每次编辑都会提示，这时可以删除交换文件，通过命令<code>rm -rf &#39;*.swp&#39;</code>即可。</p></div><h2 id="_5-时间日期类命令" tabindex="-1"><a class="header-anchor" href="#_5-时间日期类命令"><span>5.时间日期类命令</span></a></h2><h3 id="_5-1-显示当前时间" tabindex="-1"><a class="header-anchor" href="#_5-1-显示当前时间"><span>5.1 显示当前时间</span></a></h3><ul><li><p>语法：</p><ul><li><p><code>date</code> - 命令解释：显示当前时间。</p></li><li><p><code>date +%Y</code> - 命令解释：显示当前年份。</p></li><li><p><code>date +%m</code> - 命令解释：显示当前月份。</p></li><li><p><code>date +%d</code> - 命令解释：显示当前是哪一天。</p></li><li><p><code>date &quot;+%Y-%m-%d %H:%M:%S&quot;</code> - 命令解释：显示年月日时分秒。</p></li></ul></li><li><p>功能描述：</p><ul><li>显示当前时间。</li></ul></li><li><p>示例：</p><ul><li><p>显示当前时间信息：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">date</span> <span class="token comment"># 2020年 02月 13日 星期二 15:08:30 CST</span>
</code></pre></div></li><li><p>显示当前时间年月日：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">date</span> +%Y%m%d
</code></pre></div></li><li><p>显示当前时间年月日时分秒：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">date</span> <span class="token string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>
</code></pre></div></li></ul></li></ul><h3 id="_5-2-显示非当前时间" tabindex="-1"><a class="header-anchor" href="#_5-2-显示非当前时间"><span>5.2 显示非当前时间</span></a></h3><ul><li><p>语法：</p><ul><li><p><code>date -d &#39;1 days ago&#39;</code> - 命令解释：显示前一天时间。</p></li><li><p><code>date -d &#39;-1 days ago&#39;</code> - 命令解释：显示明天的时间。</p></li></ul></li><li><p>功能描述：</p><ul><li>显示非当前时间。</li></ul></li><li><p>示例：</p><ul><li><p>显示前一天：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">date</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;1 days ago&#39;</span>
</code></pre></div></li><li><p>显示明天时间：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">date</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;-1 days ago&#39;</span>
</code></pre></div></li></ul></li></ul><h3 id="_5-3-设置的系统时间" tabindex="-1"><a class="header-anchor" href="#_5-3-设置的系统时间"><span>5.3 设置的系统时间</span></a></h3><ul><li><p>语法：</p><ul><li><code>date -s 字符串时间</code>。</li></ul></li><li><p>功能描述：</p><ul><li>设置系统的时间。</li></ul></li><li><p>示例：</p><ul><li><p>设置系统当前时间。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">date</span> <span class="token parameter variable">-s</span> <span class="token string">&quot;2018-09-01 20:00:00&quot;</span>
</code></pre></div></li></ul></li></ul><h2 id="_6-用户管理类命令" tabindex="-1"><a class="header-anchor" href="#_6-用户管理类命令"><span>6.用户管理类命令</span></a></h2><h3 id="_6-1-添加新用户" tabindex="-1"><a class="header-anchor" href="#_6-1-添加新用户"><span>6.1 添加新用户</span></a></h3><ul><li><p>语法：</p><ul><li><p><code>useradd 用户名称</code> - 命令解释：添加新用户。</p></li><li><p><code>useradd -g 组名称 用户名称</code> - 命令解释：添加新用户到某个组。</p></li></ul></li><li><p>功能描述：</p><ul><li>添加新用户。</li></ul></li><li><p>示例：</p><ul><li><p>添加一个新的用户：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">useradd</span> zhangsan
</code></pre></div></li></ul></li><li><p>注意事项：</p><ul><li>添加用户后需要设置用户密码才能够使用该用户登录系统。</li></ul></li></ul><h3 id="_6-2-设置用户密码" tabindex="-1"><a class="header-anchor" href="#_6-2-设置用户密码"><span>6.2 设置用户密码</span></a></h3><ul><li><p>语法：</p><ul><li><code>passwd 用户名称</code> - 命令解释：给用户设置密码。</li></ul></li><li><p>功能描述：</p><ul><li>设置用户密码。</li></ul></li><li><p>示例：</p><ul><li><p>给用户设置密码：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">passwd</span> zhangsan
</code></pre></div></li></ul></li></ul><h3 id="_6-3-查看用户是否存在" tabindex="-1"><a class="header-anchor" href="#_6-3-查看用户是否存在"><span>6.3 查看用户是否存在</span></a></h3><ul><li><p>语法：</p><ul><li><code>id 用户名称</code>。</li></ul></li><li><p>功能描述：</p><ul><li>查看用户是否存在。</li></ul></li><li><p>示例：</p><ul><li><p>查看用户是否存在：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">id</span> zhangsan
</code></pre></div></li></ul></li></ul><h3 id="_6-4-查看已创建的所有用户" tabindex="-1"><a class="header-anchor" href="#_6-4-查看已创建的所有用户"><span>6.4 查看已创建的所有用户</span></a></h3><ul><li><p>语法：</p><ul><li><code>cat /etc/passwd</code>。</li></ul></li><li><p>功能描述：</p><ul><li>查看所有创建的用户（主要是查看系统中记录用户的文件）。</li></ul></li><li><p>示例：</p><ul><li><p>查看创建的所有用户：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/passwd
</code></pre></div></li></ul></li></ul><h3 id="_6-5-切换用户" tabindex="-1"><a class="header-anchor" href="#_6-5-切换用户"><span>6.5 切换用户</span></a></h3><ul><li><p>语法：</p><ul><li><p><code>su 用户名称</code> - 命令解释：切换用户（只能获得用户的执行权限-不能获得环境变量）。</p></li><li><p><code>su - 用户名称</code> - 命令解释：切换到用户并获得该用户的环境变量及执行权限。</p></li></ul></li><li><p>功能描述：</p><ul><li>切换用户。</li></ul></li><li><p>示例：</p><ul><li><p>切换用户：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">su</span> zhangsan
<span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span> <span class="token comment"># /usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin</span>

<span class="token builtin class-name">exit</span>
<span class="token function">su</span> - zhangsan
<span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span> <span class="token comment"># /usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/tangseng/bin</span>
</code></pre></div></li><li><p>回退到上一个用户：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">exit</span>
</code></pre></div></li></ul></li></ul><h3 id="_6-6-删除用户" tabindex="-1"><a class="header-anchor" href="#_6-6-删除用户"><span>6.6 删除用户</span></a></h3><ul><li><p>语法：</p><ul><li><p><code>userdel 用户名称</code> - 命令解释：删除用户但保存用户主目录。</p></li><li><p><code>userdel -r 用户名称</code> - 命令解释：用户和用户主目录都删除。</p></li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能描述</th></tr></thead><tbody><tr><td>-r</td><td>删除用户的同时删除与用户相关的所有文件。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>删除用户。</li></ul></li><li><p>示例：</p><ul><li><p>删除用户但保存用户主目录：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">userdel</span> zhangsan
</code></pre></div></li><li><p>删除用户和用户主目录都删除：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">userdel</span> <span class="token parameter variable">-r</span> zhangsan
</code></pre></div></li></ul></li></ul><h3 id="_6-7-查看当前登录的用户" tabindex="-1"><a class="header-anchor" href="#_6-7-查看当前登录的用户"><span>6.7 查看当前登录的用户</span></a></h3><ul><li><p>语法：</p><ul><li><p><code>whoami</code> - 命令解释：显示自身用户名称。</p></li><li><p><code>who am i</code> - 命令解释：显示登录用户的用户名。</p></li></ul></li><li><p>功能描述：</p><ul><li>查看当前登录的用户信息。</li></ul></li><li><p>示例：</p><ul><li><p>显示自身用户名称：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">whoami</span>
</code></pre></div></li><li><p>显示登录用户的用户名：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">who</span> am i
</code></pre></div></li></ul></li></ul><h3 id="_6-8-设置普通用户具有root权限" tabindex="-1"><a class="header-anchor" href="#_6-8-设置普通用户具有root权限"><span>6.8 设置普通用户具有Root权限</span></a></h3><ul><li><p>语法：</p><ul><li><code>sudo 命令</code> - 命令解释：“命令”是指需要执行的必须要有 root 权限才能执行的命令。</li></ul></li><li><p>功能描述：</p><ul><li>设置普通用户也能执行 root 权限。</li></ul></li><li><p>示例：</p><ul><li><p>添加一个新的用户并且让其可以执行 root 权限：</p><ol><li><p>添加<code>zhangsan</code>用户并对其设置密码：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">useradd</span> zhangsan <span class="token function">passwd</span> ZhangSan
</code></pre></div></li><li><p>然后修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 第一步：</span>
<span class="token function">vim</span> /etc/sudoers

<span class="token comment"># 第二步：</span>
<span class="token comment"># 修改 /etc/sudoers 文件；</span>
<span class="token comment"># 找到下面一行（大约在 101 行）在 root 下面添加一行；</span>
<span class="token comment"># 如下：</span>
<span class="token comment">## Allow root to run any commands anywhere</span>
root  <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span>   ALL
zhangsan  <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span>   ALL

<span class="token comment"># 第二步（推荐）：</span>
<span class="token comment"># 或者配置成采用 sudo 命令时不需要输入密码</span>
<span class="token comment">## Allow root to run any commands anywhere</span>
root   <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span>   ALL
zhangsan  <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span>   NOPASSWD:ALL

<span class="token comment"># 修改完毕就可以使用 zhangsan 帐号登录；</span>
<span class="token comment"># 然后用 sudo 命令即可获得 root 权限进行操作。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>检验用普通用户在 /opt 目录下创建一个文件夹：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 1.切换用户</span>
<span class="token function">su</span> zhangsan

<span class="token comment"># 2.执行命令</span>
<span class="token function">sudo</span> <span class="token function">mkdir</span> module
</code></pre></div></li></ol></li></ul></li></ul><h2 id="_7-组管理类命令" tabindex="-1"><a class="header-anchor" href="#_7-组管理类命令"><span>7.组管理类命令</span></a></h2><p>每个用户都有一个用户组。</p><p>系统可以对一个用户组中的所有用户进行集中管理。</p><p>不同的 Linux 系统对用户组的规定有所不同，如 Linux 下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p><p>用户组的管理涉及用户组的添加、删除和修改。</p><p>组的增加、删除和修改实际上就是对<code>/etc/group</code>文件的更新。</p><h3 id="_7-1-新增组" tabindex="-1"><a class="header-anchor" href="#_7-1-新增组"><span>7.1 新增组</span></a></h3><ul><li><p>语法：</p><ul><li><code>groupadd 组名称</code>。</li></ul></li><li><p>功能描述：</p><ul><li>新增用户组。</li></ul></li><li><p>示例：</p><ul><li><p>添加一个 demo 组：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">groupadd</span> demo
</code></pre></div></li></ul></li></ul><h3 id="_7-2-删除组" tabindex="-1"><a class="header-anchor" href="#_7-2-删除组"><span>7.2 删除组</span></a></h3><ul><li><p>语法：</p><ul><li><code>groupdel 组名称</code>。</li></ul></li><li><p>功能描述：</p><ul><li>删除用户组。</li></ul></li><li><p>示例：</p><ul><li><p>删除 demo 组：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">groupdel</span> demo
</code></pre></div></li></ul></li></ul><h3 id="_7-3-查看已创建的组" tabindex="-1"><a class="header-anchor" href="#_7-3-查看已创建的组"><span>7.3 查看已创建的组</span></a></h3><ul><li><p>语法：</p><ul><li><code>cat /etc/group</code> - 命令解释：实际就是查看<code>/etc/group</code>文件中的内容。</li></ul></li><li><p>功能描述：</p><ul><li>查看已经创建了那些组。</li></ul></li><li><p>示例：</p><ul><li><p>查看已创建的组：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/group
</code></pre></div></li></ul></li></ul><h3 id="_7-4-修改用户所属的组" tabindex="-1"><a class="header-anchor" href="#_7-4-修改用户所属的组"><span>7.4 修改用户所属的组</span></a></h3><ul><li><p>语法：</p><ul><li><code>usermod -g 用户组名称 用户名称</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能描述</th></tr></thead><tbody><tr><td>-g</td><td>修改用户的初始登录组（给定的组必须存在）。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>修改用户所属的组。</li></ul></li><li><p>示例：</p><ul><li><p>将用户加入到用户组：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">usermod</span> <span class="token parameter variable">-g</span> <span class="token builtin class-name">test</span> zhangsan
</code></pre></div></li></ul></li></ul><h2 id="_8-文件权限类命令" tabindex="-1"><a class="header-anchor" href="#_8-文件权限类命令"><span>8.文件权限类命令</span></a></h2><h3 id="_8-1-文件属性信息解读" tabindex="-1"><a class="header-anchor" href="#_8-1-文件属性信息解读"><span>8.1 文件属性信息解读</span></a></h3><ul><li><p>文件类型和权限的表示（如下图所示）。</p><p><img src="`+h+'" alt="文件类型和权限的表示" loading="lazy"></p><ol><li><p>0 首位表示该文件的类型（在 Linux 中第一个字符代表的是这个文件的类型是目录、文件、链接文件、...）。</p><table><thead><tr><th>符号</th><th>对应的文件类型</th></tr></thead><tbody><tr><td>-</td><td>代表文件。</td></tr><tr><td>d</td><td>d 代表目录。</td></tr><tr><td>l</td><td>链接文档（link file）。</td></tr></tbody></table></li><li><p>第 1～3 位确定属主（该文件的所有者）拥有该文件的权限（U -&gt; User）。</p></li><li><p>第 4～6 位确定属组（所有者的同组用户）拥有该文件的权限（G -&gt; Group）。</p></li><li><p>第 7～9 位确定的是其他用户拥有该文件的权限（O -&gt; Other）。</p></li></ol></li><li><p><code>rwx</code>权限作用到目录和文件的不同含义。</p><ul><li><p>作用到文件：</p><p><code>r</code>代表可读（read）：可以读取、查看。</p><p><code>w</code>代表可写（write）：可以修改，但是不能删除该文件，对该文件所在的目录有写的权限才能删除。</p><p><code>x</code>代表可执行（execute）：可以被系统执行。</p></li><li><p>作用到目录：</p><p><code>r</code>代表可读（read）：可以读取、<code>ls</code>查看目录中的内容。</p><p><code>w</code>代表可写（write）：可以修改，目录内创建、删除、重命名目录。</p><p><code>x</code>代表可执行（execute）：可以进入该目录。</p></li></ul></li><li><p>如下图示例中是某个文件的权限解读（可通过<code>ls -l</code>或<code>ll</code>命令列出文件的详细信息）：</p><p><img src="'+u+'" alt="文件权限解读" loading="lazy"></p></li></ul><div class="hint-container important"><p class="hint-container-title">重要</p><p>如果查看到是文件：链接数指的是硬链接个数。</p><p>如果查看的是文件夹：链接数指的是子文件夹个数。</p></div><h3 id="_8-2-chmod改变文件权限" tabindex="-1"><a class="header-anchor" href="#_8-2-chmod改变文件权限"><span>8.2 <code>chmod</code>改变文件权限</span></a></h3><ul><li><p>基本语法：</p><p><img src="'+g+`" alt="文件类型和权限的表示-注释版" loading="lazy"></p><ul><li><p>第一种方式变更权限：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>ugoa<span class="token punctuation">}</span><span class="token punctuation">{</span>+-<span class="token operator">=</span><span class="token punctuation">}</span><span class="token punctuation">{</span>rwx<span class="token punctuation">}</span><span class="token punctuation">]</span> 文件名称或目录名称
</code></pre></div></li><li><p>第二种方式变更权限：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token punctuation">[</span>mode<span class="token operator">=</span><span class="token number">421</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span>文件名称或目录名称<span class="token punctuation">]</span>
</code></pre></div></li></ul></li></ul><div class="hint-container important"><p class="hint-container-title">经验技巧</p><ul><li><p>如上图（基本语法中的图）所示：</p><ul><li><p>u -&gt; 表示该文件所有者拥有的权限。</p></li><li><p>g -&gt; 表示该文件所有者同组用户的权限。</p></li><li><p>o -&gt; 表示其他用户对该文件拥有的权限。</p></li><li><p>a -&gt; 代表所有人的权限（u、g、o 的总和）。</p></li></ul></li><li><p>“可读可写可执行”分别用数字来表示：<code>r=4</code>、<code>w=2</code>、<code>x=1</code>。</p></li><li><p>则完全拥有“可读可写可执行”权限的数字是 7：<code>rwx=4+2+1=7</code>。</p></li><li><p>那我们在设置权限的时候可以简化为：<code>chmod -R 777 demo.sh</code>。</p></li></ul></div><ul><li><p>实操案例：</p><ul><li><p>修改文件使其所属主用户具有执行权限：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> u+x demo.txt
</code></pre></div></li><li><p>修改文件使其所属组用户具有执行权限：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> g+x demo.txt
</code></pre></div></li><li><p>修改文件所属主用户执行权限，并使其他用户具有执行权限：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> u-x,o+x demo.txt
</code></pre></div></li><li><p>采用数字的方式，设置文件所有者、所属组、其他用户都具有可读可写可执行权限：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">777</span> demo.txt
</code></pre></div></li><li><p>修改整个文件夹里面的所有文件的所有者、所属组、其他用户都具有可读写执行权限：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> test/
</code></pre></div></li></ul></li></ul><h3 id="_8-3-chown改变所有者" tabindex="-1"><a class="header-anchor" href="#_8-3-chown改变所有者"><span>8.3 <code>chown</code>改变所有者</span></a></h3><ul><li><p>基本语法：</p><ul><li><code>chown [选项] [最终用户名称] [文件名称或目录名称]</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-R</td><td>递归操作。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>改变文件或者目录的所有者。</li></ul></li><li><p>示例：</p><ul><li><p>修改文件所有者：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chown</span> zhangsan demo.txt 
</code></pre></div></li><li><p>递归改变文件所有者和所有组：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chown</span> <span class="token parameter variable">-R</span> zhangsan:zhangsan test/
</code></pre></div></li></ul></li></ul><h3 id="_8-4-chgrp改变所属组" tabindex="-1"><a class="header-anchor" href="#_8-4-chgrp改变所属组"><span>8.4 <code>chgrp</code>改变所属组</span></a></h3><ul><li><p>基本语法：</p><ul><li><code>chgrp [最终用户组名称] [文件名称或目录名称]</code>。</li></ul></li><li><p>功能描述：</p><ul><li>改变文件或者目录的所属组。</li></ul></li><li><p>示例：</p><ul><li><p>修改文件的所属组：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chgrp</span> root demo.txt
</code></pre></div></li></ul></li></ul><h2 id="_9-搜索查找类命令" tabindex="-1"><a class="header-anchor" href="#_9-搜索查找类命令"><span>9.搜索查找类命令</span></a></h2><h3 id="_9-1-find查找文件或者目录" tabindex="-1"><a class="header-anchor" href="#_9-1-find查找文件或者目录"><span>9.1 <code>find</code>查找文件或者目录</span></a></h3><ul><li><p>基本语法：</p><ul><li><code>find [搜索范围] [选项]</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-name&lt;查询方式&gt;</td><td>按照指定的文件名查找模式查找文件。</td></tr><tr><td>-user&lt;用户名&gt;</td><td>查找属于指定用户名所有文件。</td></tr><tr><td>-size&lt;文件大小&gt;</td><td>按照指定的文件大小查找文件。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li><code>find</code>指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件显示在终端。</li></ul></li><li><p>示例：</p><ul><li><p>按文件名：根据名称查找<code>/</code>目录下的<code>filename.txt</code>文件。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">&quot;*.txt&quot;</span>
</code></pre></div></li><li><p>按拥有者：查找<code>/opt</code>目录下，用户名称为<code>-user</code>的文件。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> opt/ <span class="token parameter variable">-user</span> zhangsan
</code></pre></div></li><li><p>按文件大小：在<code>/home</code>目录下查找大于 200m 的文件（+n 大于 -n 小于 n 等于）。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> /home <span class="token parameter variable">-size</span> +204800
</code></pre></div></li></ul></li></ul><h3 id="_9-2-grep过滤查找及-管道符" tabindex="-1"><a class="header-anchor" href="#_9-2-grep过滤查找及-管道符"><span>9.2 <code>grep</code>过滤查找及<code>|</code>管道符</span></a></h3><ul><li><p>基本语法：</p><ul><li><code>grep 选项 查找的内容 源文件名称</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-n</td><td>显示匹配及行号。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>管道符<code>|</code>表示将前一个命令的处理结果输出传递给后面的命令处理。</li></ul></li><li><p>示例：</p><ul><li><p>查找某文件在第几行：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-n</span> demo
</code></pre></div></li></ul></li></ul><h2 id="_10-压缩和解压缩命令" tabindex="-1"><a class="header-anchor" href="#_10-压缩和解压缩命令"><span>10.压缩和解压缩命令</span></a></h2><h3 id="_10-1-gzip-gunzip压缩" tabindex="-1"><a class="header-anchor" href="#_10-1-gzip-gunzip压缩"><span>10.1 <code>gzip</code>/<code>gunzip</code>压缩</span></a></h3><ul><li><p>基本语法：</p><ul><li><code>gzip 文件名称</code> - 命令解释：压缩文件（只能将文件压缩为<code>*.gz</code>文件）。</li><li><code>gunzip 文件名称.gz</code> - 命令解释：解压缩<code>*.gz</code>文件的命令。</li></ul></li><li><p>经验技巧：</p><ul><li>该命令只能压缩文件，不能压缩目录。</li><li>该命令不会保留原来的文件。</li></ul></li><li><p>示例：</p><ul><li><p>gzip 压缩文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">gzip</span> demo.txt <span class="token comment"># 输出的结果为：demo.txt.gz</span>
</code></pre></div></li><li><p>gunzip 解压缩文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>gunzip demo.txt.gz
</code></pre></div></li></ul></li></ul><h3 id="_10-2-zip-unzip压缩" tabindex="-1"><a class="header-anchor" href="#_10-2-zip-unzip压缩"><span>10.2 <code>zip</code>/<code>unzip</code>压缩</span></a></h3><ul><li><p>基本语法：</p><ul><li><p><code>zip [选项] xxx.zip 将要压缩的内容</code> - 命令解释：压缩文件或目录的命令。</p></li><li><p><code>unzip [选项] xxx.zip</code> - 命令解释：解压缩文件的命令。</p></li></ul></li><li><p>选项：</p><table><thead><tr><th>zip 的选项</th><th>功能</th></tr></thead><tbody><tr><td>-r</td><td>压缩目录。</td></tr></tbody></table><table><thead><tr><th>unzip 的选项</th><th>功能</th></tr></thead><tbody><tr><td>-d&lt;目录&gt;</td><td>指定解压后文件的存放目录。</td></tr></tbody></table></li><li><p>经验技巧：</p><ul><li><code>zip</code>压缩命令在 Window/Linux 系统中都通用（可以压缩目录且保留源文件）。</li></ul></li><li><p>示例：</p><ul><li><p>zip 压缩文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">zip</span> demo.txt test.txt <span class="token comment"># 可以同时压缩多个文件</span>
<span class="token comment"># 输出结果：demo.zip test.zip</span>
</code></pre></div></li><li><p>解压文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">unzip</span> demo.zip test.zip <span class="token comment"># 可以同时解压多个文件</span>
</code></pre></div></li><li><p>解压到指定目录：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">unzip</span> demo.zip <span class="token parameter variable">-d</span> /opt
</code></pre></div></li></ul></li></ul><h3 id="_10-3-tar打包" tabindex="-1"><a class="header-anchor" href="#_10-3-tar打包"><span>10.3 <code>tar</code>打包</span></a></h3><ul><li><p>基本语法：</p><ul><li><code>tar [选项] xxx.tar.gz 将要打包进去的内容</code> - 命令解释：打包目录（压缩后的文件格式<code>.tar.gz</code>）。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-z</td><td>打包同时压缩。</td></tr><tr><td>-c</td><td>产生 .tar 打包文件。</td></tr><tr><td>-v</td><td>显示详细信息。</td></tr><tr><td>-f</td><td>指定压缩后的文件名。</td></tr><tr><td>-x</td><td>解包 .tar 文件。</td></tr></tbody></table></li><li><p>示例：</p><ul><li><p>压缩多个文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> demo.tar.gz test.txt zhangsan.txt
</code></pre></div></li><li><p>压缩目录：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> demo.tar.gz test/
</code></pre></div></li><li><p>解压到当前目录：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> demo.tar.gz
</code></pre></div></li><li><p>解压到指定目录：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> demo.tar.gz <span class="token parameter variable">-C</span> /opt
</code></pre></div></li></ul></li></ul><h2 id="_11-磁盘分区类命令" tabindex="-1"><a class="header-anchor" href="#_11-磁盘分区类命令"><span>11.磁盘分区类命令</span></a></h2><h3 id="_11-1-df" tabindex="-1"><a class="header-anchor" href="#_11-1-df"><span>11.1 <code>df</code></span></a></h3><ul><li><p>基本语法：</p><ul><li><code>df 选项</code> - 命令解释：df 是 disk free（空余硬盘） 的缩写。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-h</td><td>以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>可以列出文件系统的整体磁盘使用量（检查文件系统的磁盘空间占用情况）。</li></ul></li><li><p>示例：</p><ul><li><p>查看磁盘使用情况：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">df</span> <span class="token parameter variable">-h</span>
</code></pre></div></li></ul></li></ul><h3 id="_11-2-fdisk" tabindex="-1"><a class="header-anchor" href="#_11-2-fdisk"><span>11.2 <code>fdisk</code></span></a></h3><ul><li><p>基本语法：</p><ul><li><code>fdisk -l</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-l</td><td>显示所有硬盘的分区列表。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li><p>查看磁盘分区的详情。</p></li><li><p>Linux 分区：</p><ul><li>Device：分区序列。</li><li>Boot：引导。</li><li>Start：从X磁柱开始。</li><li>End：到Y磁柱结束。</li><li>Blocks：容量。</li><li>Id：分区类型ID。</li><li>System：分区类型。</li></ul></li><li><p>Windows 分区如下图所示：</p><p><img src="`+b+`" alt="Windows分区" loading="lazy"></p></li></ul></li><li><p>经验技巧：</p><ul><li>该命令必须在<code>root</code>用户下才能使用。</li></ul></li><li><p>示例：</p><ul><li><p>查看 Linux 系统分区情况：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">fdisk</span> <span class="token parameter variable">-l</span>
</code></pre></div></li></ul></li></ul><h3 id="_11-3-mount-umount" tabindex="-1"><a class="header-anchor" href="#_11-3-mount-umount"><span>11.3 <code>mount</code>/<code>umount</code></span></a></h3><div class="hint-container info"><p class="hint-container-title">什么是挂载和卸载？</p><p>对于 Linux 用户来讲，不论有几个分区，分别分给哪一个目录使用，它总归就是一个根目录、一个独立且唯一的文件结构。</p><p>Linux 中每个分区都是用来组成整个文件系统的一部分，它在用一种叫做“挂载”的处理方法，它整个文件系统中包含了一整套的文件和目录，并将一个分区和一个目录联系起来，要载入的那个分区将使它的存储空间在这个目录下获得。</p></div><p>挂载前的准备工作（必须要有光盘或者已经连接镜像文件）。</p><p><img src="`+v+`" alt="挂载前准备" loading="lazy"></p><ul><li><p>基本语法：</p><ul><li><code>mount [-t vfstype] [-o options] device dir</code> - 命令解释：挂载设备。</li><li><code>umount 设备文件名或挂载点</code> - 命令解释：卸载设备。</li></ul></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>-t vfstype</td><td>指定文件系统的类型，通常不必指定。mount 会自动选择正确的类型。常用类型有：<br>1.光盘或光盘镜像：iso9660<br>2.DOS fat16文件系统：msdos<br>3.Windows 9x fat32文件系统：vfat<br>4.Windows NT ntfs文件系统：ntfs<br>5.Mount Windows文件网络共享：smbfs<br>6.UNIX (LINUX) 文件网络共享：nfs</td></tr><tr><td>-o options</td><td>主要用来描述设备或档案的挂接方式。常用的参数有：<br>loop：用来把一个文件当成硬盘分区挂接上系统。 <br>ro：采用只读方式挂接设备。<br>rw：采用读写方式挂接设备。<br>iocharset：指定访问文件系统所用字符集。</td></tr><tr><td>device</td><td>要挂接（mount）的设备。</td></tr><tr><td>dir</td><td>设备在系统上的挂接点（mount point）。</td></tr></tbody></table></li><li><p>示例：</p><ul><li><p>挂载光盘镜像文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /mnt/cdrom/ <span class="token comment"># 建立挂载点</span>
<span class="token function">mount</span> <span class="token parameter variable">-t</span> iso9660 /dev/cdrom /mnt/cdrom/ <span class="token comment"># 将设备名称iso9660 /dev/cdrom 挂载到 /mnt/cdrom 中</span>
ll /mnt/cdrom/ <span class="token comment"># 查看</span>
</code></pre></div></li><li><p>卸载光盘镜像文件：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">umount</span> /mnt/cdrom
</code></pre></div></li><li><p>设置开机自动挂载：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/fstab
</code></pre></div><p>添加红框中内容后保存退出：</p><p><img src="`+m+`" alt="设置开机自动挂载" loading="lazy"></p></li></ul></li></ul><h2 id="_12-进程线程类命令" tabindex="-1"><a class="header-anchor" href="#_12-进程线程类命令"><span>12.进程线程类命令</span></a></h2><div class="hint-container info"><p class="hint-container-title">什么是进程和线程？</p><p>进程是正在执行的一个程序或命令，每一个进程都是一个运行的实体，都有自己的地址空间，并占用一定的系统资源。</p></div><h3 id="_12-1-ps" tabindex="-1"><a class="header-anchor" href="#_12-1-ps"><span>12.1 <code>ps</code></span></a></h3><ul><li><p>基本语法：</p><ul><li><code>ps -aux | grep xxx</code> - 命令解释：查看系统中所有进程。</li><li><code>ps -ef | grep xxx</code> - 命令解释：可以查看子父进程之间的关系。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-a</td><td>选择所有进程。</td></tr><tr><td>-u</td><td>显示所有用户的所有进程。</td></tr><tr><td>-x</td><td>显示没有终端的进程。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li><p><code>ps</code>是 process status（进程状态）的简写。</p></li><li><p>作用是查看当前系统进程的状态。</p></li></ul></li><li><p>显示说明：</p><ul><li><code>ps -aux</code>命令输出的显示信息说明。 <ul><li>USER：该进程是由哪个用户产生的。</li><li>PID：进程的 ID 号。</li><li>%CPU：该进程占用 CPU 资源的百分比，占用越高，进程越耗费资源。</li><li>%MEM：该进程占用物理内存的百分比，占用越高，进程越耗费资源。</li><li>VSZ：该进程占用虚拟内存的大小，单位 KB。</li><li>RSS：该进程占用实际物理内存的大小，单位 KB。</li><li>TTY：该进程是在哪个终端中运行的。其中 tty1-tty7 代表本地控制台终端，tty1-tty6 是本地的字符界面终端， tty7是图形终端，pts/0-255 代表虚拟终端。</li><li>STAT：进程状态（常见的状态有：R：运行、S：睡眠、T：停止状态、s：包含子进程、+：位于后台）。</li><li>START：该进程的启动时间。</li><li>TIME：该进程占用CPU的运算时间（注意不是系统时间）。</li><li>COMMAND：产生此进程的命令名。</li></ul></li><li><code>ps -ef</code>命令输出的显示信息说明。 <ul><li>UID：用户 ID。</li><li>PID：进程 ID。</li><li>PPID：父进程 ID。</li><li>C：CPU 用于计算执行优先级的因子。数值越大，表明进程是 CPU 密集型运算，执行优先级会降低；数值越小，表明进程是 I/O 密集型运算，执行优先级会提高。</li><li>STIME：进程启动的时间。</li><li>TTY：完整的终端名称。</li><li>TIME：CPU 时间。</li><li>CMD：启动进程所用的命令和参数。</li></ul></li></ul></li><li><p>经验技巧：</p><ul><li>如果想查看进程的 <strong>CPU</strong> 占用率和内存占用率，可以使用<code>aux</code>。</li><li>如果想查看<strong>进程的父进程 ID</strong> 可以使用<code>ef</code>。</li></ul></li><li><p>示例：</p><ul><li><p><code>ps -aux</code>：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-aux</span>
</code></pre></div><p><img src="`+k+`" alt="ps-aux" loading="lazy"></p></li><li><p><code>ps -ef</code>：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-ef</span>
</code></pre></div><p><img src="`+_+`" alt="ps-ef" loading="lazy"></p></li></ul></li></ul><h3 id="_12-2-kill" tabindex="-1"><a class="header-anchor" href="#_12-2-kill"><span>12.2 <code>kill</code></span></a></h3><ul><li><p>基本语法：</p><ul><li><code>kill [选项] 进程号</code> - 命令解释：通过进程号杀死进程。</li><li><code>killall 进程名称</code> - 命令解释：通过进程名称杀死进程（也支持通配符）。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-9</td><td>表示强迫进程立即停止。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>根据进程名称或进程号来终止某一个进程。</li></ul></li><li><p>示例：</p><ul><li><p>强迫杀死浏览器进程：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token number">5102</span>
</code></pre></div></li><li><p>通过进程名称杀死进程：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">killall</span> firefox
</code></pre></div></li></ul></li></ul><h2 id="_13-系统定时任务命令" tabindex="-1"><a class="header-anchor" href="#_13-系统定时任务命令"><span>13.系统定时任务命令</span></a></h2><h3 id="_13-1-crond" tabindex="-1"><a class="header-anchor" href="#_13-1-crond"><span>13.1 <code>crond</code></span></a></h3><ul><li><p>功能描述：</p><ul><li>服务管理。</li></ul></li><li><p>示例：</p><ul><li><p>重新启动<code>crond</code>服务：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl restart crond
</code></pre></div></li></ul></li></ul><h3 id="_13-2-crontab" tabindex="-1"><a class="header-anchor" href="#_13-2-crontab"><span>13.2 <code>crontab</code></span></a></h3><ul><li><p>基本语法：</p><ul><li><code>crontab [选项]</code>。</li></ul></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-e</td><td>编辑 crontab 定时任务。</td></tr><tr><td>-l</td><td>查询 crontab 任务。</td></tr><tr><td>-f</td><td>删除当前用户所有的 crontab 任务。</td></tr></tbody></table></li><li><p>功能描述：</p><ul><li>定时任务设置。</li></ul></li><li><p>参数：</p><ul><li><p>进入<code>crontab</code>的编辑界面（会打开<code>vim</code>编辑你的工作，通过 &quot;* &quot; 定义任务周期）。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span>
</code></pre></div><table><thead><tr><th>项目</th><th>选项</th><th>范围</th></tr></thead><tbody><tr><td>第一个“ *”</td><td>一小时当中的第几分钟。</td><td>0-59</td></tr><tr><td>第二个“ *”</td><td>一天当中的第几小时。</td><td>0-23</td></tr><tr><td>第三个“ *”</td><td>一个月当中的第几天。</td><td>1-31</td></tr><tr><td>第四个“ *”</td><td>一年当中的第几月。</td><td>1-12</td></tr><tr><td>第五个“ *”</td><td>一周当中的星期几。</td><td>0-7（0 和 7 都代表星期日）</td></tr></tbody></table></li><li><p>每个星号上可以使用的特殊符号。</p><table><thead><tr><th>特殊符号</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>代表任何时间。比如第一个“ *”就代表一小时中每分钟都执行一次的意思。</td></tr><tr><td>,</td><td>代表不连续的时间。比如“0 8,12,16 * * * 命令”，就代表在每天的8点0分，12点0分，16点0分都执行一次命令。</td></tr><tr><td>-</td><td>代表连续的时间范围。比如“0 5 * * 1-6命令”，代表在周一到周六的凌晨5点0分执行命令。</td></tr><tr><td>*/n</td><td>代表每隔多久执行一次。比如“ */10 命令”，代表每隔10分钟就执行一遍命令。</td></tr></tbody></table></li><li><p>特定时间执行命令。</p><table><thead><tr><th>时间</th><th>含义</th></tr></thead><tbody><tr><td>45 22 * * * 命令</td><td>在22点45分执行命令。</td></tr><tr><td>0 17 * * 1 命令</td><td>每周1 的17点0分执行命令。</td></tr><tr><td>0 5 1,15 * * 命令</td><td>每月1号和15号的凌晨5点0分执行命令。</td></tr><tr><td>40 4 * * 1-5 命令</td><td>每周一到周五的凌晨4点40分执行命令。</td></tr><tr><td>*/10 4 * * * 命令</td><td>每天的凌晨4点，每隔10分钟执行一次命令。</td></tr><tr><td>0 0 1,15 * 1 命令（错误案例）</td><td>每月1号和15号，每周1的0点0分都会执行命令。</td></tr></tbody></table><p><strong>注意</strong>：星期几和几号最好不要同时出现，因为他们定义的都是天（非常容易让管理员混乱）。</p></li></ul></li><li><p>示例：</p><ul><li><p>每隔 1 分钟向<code>/root/demo.txt</code>文件中添加一些内容：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>*/1 * * * * /bin/echo <span class="token string">&quot;11&quot;</span> <span class="token operator">&gt;&gt;</span> /root/demo.txt
</code></pre></div></li></ul></li></ul>`,160);function z(w,I){return l(),t("div",null,[f,e(" more "),y])}const q=a(x,[["render",z],["__file","index.html.vue"]]),S=JSON.parse('{"path":"/notes/linux/command/","title":"常见命令","lang":"zh-CN","frontmatter":{"title":"常见命令","icon":"shell","category":"Linux","timeline":true,"star":true,"description":"记录在开发过程中使用比较频繁的一些 Linux 命令（持续更新中...）。 1.帮助类命令 1.1 man 语法： man [命令或配置文件]。 功能描述： 获取相关命令或配置文件的帮助信息。 显示说明： 示例： 查看ls命令的帮助信息。 1.2 help 语法： help 命令。 功能描述： 获得 Shell 内置命令的帮助信息。 示例： 查看cd命...","head":[["meta",{"property":"og:url","content":"https://SuperChenWenjing.github.io/notes/linux/command/"}],["meta",{"property":"og:site_name","content":"陈文景"}],["meta",{"property":"og:title","content":"常见命令"}],["meta",{"property":"og:description","content":"记录在开发过程中使用比较频繁的一些 Linux 命令（持续更新中...）。 1.帮助类命令 1.1 man 语法： man [命令或配置文件]。 功能描述： 获取相关命令或配置文件的帮助信息。 显示说明： 示例： 查看ls命令的帮助信息。 1.2 help 语法： help 命令。 功能描述： 获得 Shell 内置命令的帮助信息。 示例： 查看cd命..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-08T16:03:07.000Z"}],["meta",{"property":"article:author","content":"陈文景"}],["meta",{"property":"article:modified_time","content":"2024-03-08T16:03:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-08T16:03:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"陈文景\\",\\"email\\":\\"2646530197@qq.com\\",\\"url\\":\\"https://superchenwenjing.github.io\\"}]}"]],"date":"2024-03-08T16:03:07.000Z"},"headers":[{"level":2,"title":"1.帮助类命令","slug":"_1-帮助类命令","link":"#_1-帮助类命令","children":[{"level":3,"title":"1.1 man","slug":"_1-1-man","link":"#_1-1-man","children":[]},{"level":3,"title":"1.2 help","slug":"_1-2-help","link":"#_1-2-help","children":[]}]},{"level":2,"title":"2.开关机类命令","slug":"_2-开关机类命令","link":"#_2-开关机类命令","children":[{"level":3,"title":"2.1 临时开关服务命令","slug":"_2-1-临时开关服务命令","link":"#_2-1-临时开关服务命令","children":[]},{"level":3,"title":"2.2 永久开关服务命令","slug":"_2-2-永久开关服务命令","link":"#_2-2-永久开关服务命令","children":[]},{"level":3,"title":"2.3 Linux系统运行级别","slug":"_2-3-linux系统运行级别","link":"#_2-3-linux系统运行级别","children":[]}]},{"level":2,"title":"3.文件目录类命令","slug":"_3-文件目录类命令","link":"#_3-文件目录类命令","children":[{"level":3,"title":"3.1 pwd","slug":"_3-1-pwd","link":"#_3-1-pwd","children":[]},{"level":3,"title":"3.2 ls","slug":"_3-2-ls","link":"#_3-2-ls","children":[]},{"level":3,"title":"3.3 cd","slug":"_3-3-cd","link":"#_3-3-cd","children":[]},{"level":3,"title":"3.4 mkdir","slug":"_3-4-mkdir","link":"#_3-4-mkdir","children":[]},{"level":3,"title":"3.5 rmdir","slug":"_3-5-rmdir","link":"#_3-5-rmdir","children":[]},{"level":3,"title":"3.6 touch","slug":"_3-6-touch","link":"#_3-6-touch","children":[]},{"level":3,"title":"3.7 cp","slug":"_3-7-cp","link":"#_3-7-cp","children":[]},{"level":3,"title":"3.8 rm","slug":"_3-8-rm","link":"#_3-8-rm","children":[]},{"level":3,"title":"3.9 mv","slug":"_3-9-mv","link":"#_3-9-mv","children":[]},{"level":3,"title":"3.10 cat","slug":"_3-10-cat","link":"#_3-10-cat","children":[]},{"level":3,"title":"3.11 more","slug":"_3-11-more","link":"#_3-11-more","children":[]},{"level":3,"title":"3.12 less","slug":"_3-12-less","link":"#_3-12-less","children":[]},{"level":3,"title":"3.13 head","slug":"_3-13-head","link":"#_3-13-head","children":[]},{"level":3,"title":"3.14 tail","slug":"_3-14-tail","link":"#_3-14-tail","children":[]},{"level":3,"title":"3.15 echo","slug":"_3-15-echo","link":"#_3-15-echo","children":[]},{"level":3,"title":"3.16 > >>","slug":"_3-16","link":"#_3-16","children":[]},{"level":3,"title":"3.17 ln","slug":"_3-17-ln","link":"#_3-17-ln","children":[]},{"level":3,"title":"3.18 history","slug":"_3-18-history","link":"#_3-18-history","children":[]}]},{"level":2,"title":"4.VI和VIM编辑器","slug":"_4-vi和vim编辑器","link":"#_4-vi和vim编辑器","children":[{"level":3,"title":"4.1 VI和VIM简介","slug":"_4-1-vi和vim简介","link":"#_4-1-vi和vim简介","children":[]},{"level":3,"title":"4.2 VIM的一般模式","slug":"_4-2-vim的一般模式","link":"#_4-2-vim的一般模式","children":[]},{"level":3,"title":"4.3 VIM的编辑模式","slug":"_4-3-vim的编辑模式","link":"#_4-3-vim的编辑模式","children":[]},{"level":3,"title":"4.4 VIM的命令模式","slug":"_4-4-vim的命令模式","link":"#_4-4-vim的命令模式","children":[]},{"level":3,"title":"4.5 三个模式之间的关系","slug":"_4-5-三个模式之间的关系","link":"#_4-5-三个模式之间的关系","children":[]}]},{"level":2,"title":"5.时间日期类命令","slug":"_5-时间日期类命令","link":"#_5-时间日期类命令","children":[{"level":3,"title":"5.1 显示当前时间","slug":"_5-1-显示当前时间","link":"#_5-1-显示当前时间","children":[]},{"level":3,"title":"5.2 显示非当前时间","slug":"_5-2-显示非当前时间","link":"#_5-2-显示非当前时间","children":[]},{"level":3,"title":"5.3 设置的系统时间","slug":"_5-3-设置的系统时间","link":"#_5-3-设置的系统时间","children":[]}]},{"level":2,"title":"6.用户管理类命令","slug":"_6-用户管理类命令","link":"#_6-用户管理类命令","children":[{"level":3,"title":"6.1 添加新用户","slug":"_6-1-添加新用户","link":"#_6-1-添加新用户","children":[]},{"level":3,"title":"6.2 设置用户密码","slug":"_6-2-设置用户密码","link":"#_6-2-设置用户密码","children":[]},{"level":3,"title":"6.3 查看用户是否存在","slug":"_6-3-查看用户是否存在","link":"#_6-3-查看用户是否存在","children":[]},{"level":3,"title":"6.4 查看已创建的所有用户","slug":"_6-4-查看已创建的所有用户","link":"#_6-4-查看已创建的所有用户","children":[]},{"level":3,"title":"6.5 切换用户","slug":"_6-5-切换用户","link":"#_6-5-切换用户","children":[]},{"level":3,"title":"6.6 删除用户","slug":"_6-6-删除用户","link":"#_6-6-删除用户","children":[]},{"level":3,"title":"6.7 查看当前登录的用户","slug":"_6-7-查看当前登录的用户","link":"#_6-7-查看当前登录的用户","children":[]},{"level":3,"title":"6.8 设置普通用户具有Root权限","slug":"_6-8-设置普通用户具有root权限","link":"#_6-8-设置普通用户具有root权限","children":[]}]},{"level":2,"title":"7.组管理类命令","slug":"_7-组管理类命令","link":"#_7-组管理类命令","children":[{"level":3,"title":"7.1 新增组","slug":"_7-1-新增组","link":"#_7-1-新增组","children":[]},{"level":3,"title":"7.2 删除组","slug":"_7-2-删除组","link":"#_7-2-删除组","children":[]},{"level":3,"title":"7.3 查看已创建的组","slug":"_7-3-查看已创建的组","link":"#_7-3-查看已创建的组","children":[]},{"level":3,"title":"7.4 修改用户所属的组","slug":"_7-4-修改用户所属的组","link":"#_7-4-修改用户所属的组","children":[]}]},{"level":2,"title":"8.文件权限类命令","slug":"_8-文件权限类命令","link":"#_8-文件权限类命令","children":[{"level":3,"title":"8.1 文件属性信息解读","slug":"_8-1-文件属性信息解读","link":"#_8-1-文件属性信息解读","children":[]},{"level":3,"title":"8.2 chmod改变文件权限","slug":"_8-2-chmod改变文件权限","link":"#_8-2-chmod改变文件权限","children":[]},{"level":3,"title":"8.3 chown改变所有者","slug":"_8-3-chown改变所有者","link":"#_8-3-chown改变所有者","children":[]},{"level":3,"title":"8.4 chgrp改变所属组","slug":"_8-4-chgrp改变所属组","link":"#_8-4-chgrp改变所属组","children":[]}]},{"level":2,"title":"9.搜索查找类命令","slug":"_9-搜索查找类命令","link":"#_9-搜索查找类命令","children":[{"level":3,"title":"9.1 find查找文件或者目录","slug":"_9-1-find查找文件或者目录","link":"#_9-1-find查找文件或者目录","children":[]},{"level":3,"title":"9.2 grep过滤查找及|管道符","slug":"_9-2-grep过滤查找及-管道符","link":"#_9-2-grep过滤查找及-管道符","children":[]}]},{"level":2,"title":"10.压缩和解压缩命令","slug":"_10-压缩和解压缩命令","link":"#_10-压缩和解压缩命令","children":[{"level":3,"title":"10.1 gzip/gunzip压缩","slug":"_10-1-gzip-gunzip压缩","link":"#_10-1-gzip-gunzip压缩","children":[]},{"level":3,"title":"10.2 zip/unzip压缩","slug":"_10-2-zip-unzip压缩","link":"#_10-2-zip-unzip压缩","children":[]},{"level":3,"title":"10.3 tar打包","slug":"_10-3-tar打包","link":"#_10-3-tar打包","children":[]}]},{"level":2,"title":"11.磁盘分区类命令","slug":"_11-磁盘分区类命令","link":"#_11-磁盘分区类命令","children":[{"level":3,"title":"11.1 df","slug":"_11-1-df","link":"#_11-1-df","children":[]},{"level":3,"title":"11.2 fdisk","slug":"_11-2-fdisk","link":"#_11-2-fdisk","children":[]},{"level":3,"title":"11.3 mount/umount","slug":"_11-3-mount-umount","link":"#_11-3-mount-umount","children":[]}]},{"level":2,"title":"12.进程线程类命令","slug":"_12-进程线程类命令","link":"#_12-进程线程类命令","children":[{"level":3,"title":"12.1 ps","slug":"_12-1-ps","link":"#_12-1-ps","children":[]},{"level":3,"title":"12.2 kill","slug":"_12-2-kill","link":"#_12-2-kill","children":[]}]},{"level":2,"title":"13.系统定时任务命令","slug":"_13-系统定时任务命令","link":"#_13-系统定时任务命令","children":[{"level":3,"title":"13.1 crond","slug":"_13-1-crond","link":"#_13-1-crond","children":[]},{"level":3,"title":"13.2 crontab","slug":"_13-2-crontab","link":"#_13-2-crontab","children":[]}]}],"git":{"createdTime":1709913787000,"updatedTime":1709913787000,"contributors":[{"name":"陈文景","email":"2646530197@qq.com","commits":1}]},"readingTime":{"minutes":29.92,"words":8976},"filePathRelative":"notes/linux/command/README.md","localizedDate":"2024年3月8日","excerpt":"<p>记录在开发过程中使用比较频繁的一些 Linux 命令（持续更新中...）。</p>\\n","autoDesc":true}');export{q as comp,S as data};
